User Story: 
As a depositor, I want to have metadata automatically filled from other University systems and remembered from previous deposits, so that I don't have to waste time reentering the same information.

Acceptance Criteria (generated from Model #1)
1. When a depositor starts a new deposit, the system should automatically retrieve and fill in relevant metadata fields from other University systems, such as the student information system or HR system.
2. The filled-in metadata should include basic information such as name, email address, and affiliation, as well as any additional fields that are commonly used for deposits.
3. The system should allow the depositor to review and verify the automatically filled metadata before proceeding with the deposit.
4. The system should provide an option for the depositor to manually edit or update the automatically filled metadata if needed.
5. After the depositor submits a deposit, the system should remember the filled-in metadata for future deposits made by the same depositor.
6. The system should securely store the automatically filled metadata and protect it from unauthorized access or misuse.
7. If the system fails to retrieve or fill in the metadata from other University systems, an error message should be displayed, informing the depositor of the issue and providing instructions for manual entry of the metadata.
8. The system should provide appropriate error handling and validation to ensure the accuracy and integrity of the automatically filled metadata.

Acceptance Criteria (generated from Model #2)
1. The system should be able to retrieve metadata automatically from other University systems, such as student information system and HR database, when a depositor starts a new deposit.
2. The automatically retrieved metadata should include the necessary and relevant information for the deposit process, such as name, ID, affiliation, department, and contact information.
3. If the system is unable to retrieve any metadata from other University systems, the depositor should be prompted to manually enter the missing information.
4. The system should remember the metadata entered by the depositor in previous deposits, so that it can be pre-filled in the appropriate fields whenever the depositor starts a new deposit.
5. The pre-filled metadata should be editable in case the depositor wants to make changes or updates.
6. The system should provide clear and intuitive fields for the depositor to view and confirm the pre-filled metadata before submitting the deposit.
7. The metadata filling and remembering functionality should be secure and comply with any privacy and data protection regulations.
8. The system should handle and display the retrieved metadata correctly, ensuring accuracy and consistency.
9. Perform testing for retrieving metadata from different University systems, ensuring that it works seamlessly without any errors or disruptions.
10. The system should provide a mechanism to refresh or update the retrieved metadata in case there are changes or updates in the University systems.

Acceptance Criteria (generated from Model #3)
1. Metadata fields should be automatically populated when depositing a file.
2. All required metadata fields should be filled in order to complete the deposit.
3. The system should remember the depositor's information from previous deposits.
4. The system should also be able to retrieve metadata from connected University systems.
5. The depositor should be able to edit and review all metadata fields before completing the deposit.

Acceptance Criteria (generated from Model #4)
1. The user should be able to access the deposit page from the homepage.
2. The user should be able to auto-fill metadata from other University systems.
3. The user should be able to save previously entered metadata for future deposits.
4. All the metadata fields should be validated correctly before submitting the deposit.
5. The user should receive confirmation after submitting the deposit successfully.
6. The auto-filled metadata should be accurate and up-to-date.
7. The saved metadata should be securely stored and encrypted.

